```json
{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Create a Comprehensive Healthcare Portal API",
    "version": "v1",
    "description": "A comprehensive healthcare patient portal API with HIPAA-compliant security."
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "healthy" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login and obtain JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    },
    "/patients": {
      "get": {
        "summary": "Get list of patients (admin only)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "Number of patients per page"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "Offset for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "List of patients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Patient" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      },
      "post": {
        "summary": "Register a new patient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Patient" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Patient" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" }
        }
      }
    },
    "/patients/{patientId}": {
      "get": {
        "summary": "Get a patient by ID",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "schema": { "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Patient found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Patient" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFoundError" }
        }
      },
      "put": {
        "summary": "Update a patient",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "schema": { "type": "integer" },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Patient" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Patient" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "400": { "$ref": "#/components/responses/BadRequestError" }
        }
      },
      "delete": {
        "summary": "Delete a patient",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "schema": { "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "Patient deleted" },
          "404": { "$ref": "#/components/responses/NotFoundError" }
        }
      }
    }
    // ... (other endpoints for appointments, messages, medical records, etc.)
  },
  "components": {
    "schemas": {
      "Patient": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "readOnly": true },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "dob": { "type": "string", "format": "date" },
          // ... other patient properties
        },
        "required": ["firstName", "lastName", "dob"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" }
        }
      }
      // ... other schemas
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Unauthorized" }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Not Found" }
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Bad Request" }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
```
